from tkinter import *
import random
choices = ["rock", "paper", "scissors"]
user_score = 0
computer_score = 0


def computer_selection():
  """Generates a random choice (rock, paper, or scissors) for the computer."""
  return random.choice(choices)


def determine_winner(user_choice, computer_choice):
  """
  Determines the winner based on the user's and computer's choices.

  Args:
      user_choice: The user's choice (rock, paper, or scissors).
      computer_choice: The computer's choice (rock, paper, or scissors).

  Returns:
      A string indicating the winner ("user", "computer", or "tie").
  """
  global user_score, computer_score

  if user_choice == computer_choice:
    return "tie"
  elif (user_choice == "rock" and computer_choice == "scissors") or \
       (user_choice == "paper" and computer_choice == "rock") or \
       (user_choice == "scissors" and computer_choice == "paper"):
    user_score += 1
    return "user"
  else:
    computer_score += 1
    return "computer"


def play_game(user_choice):
  """
  Plays a round of the game with the user's choice.

  Args:
      user_choice: The user's choice (rock, paper, or scissors).
  """
  computer_choice = computer_selection()
  result = determine_winner(user_choice, computer_choice)

  update_display(f"You chose {user_choice}. Computer chose {computer_choice}.")
  if result == "user":
    update_display("You win!")
  elif result == "computer":
    update_display("You lose.")
  else:
    update_display("It's a tie!")

  update_scoreboard()


def update_display(text):
  """Updates the text displayed in the user interface."""
  display_text.set(text)


def update_scoreboard():
  """Updates the scoreboard with the current user and computer scores."""
  scoreboard_text.set(f"User Score: {user_score} \nComputer Score: {computer_score}")


def button_click(choice):
  """Handles button clicks for rock, paper, and scissors."""
  play_game(choice)
  ask_replay()


def ask_replay():
  """Asks the user if they want to play another round."""
  replay_choice = messagebox.askquestion("Play Again?", "Do you want to play again?")
  if replay_choice == "yes":
    reset_game()
  else:
    window.destroy()


def reset_game():
  """Resets the game by clearing the display and setting scores to zero."""
  update_display("")
  global user_score, computer_score
  user_score = 0
  computer_score = 0
  update_scoreboard()
window = Tk()
window.title("Rock Paper Scissors")
display_text = StringVar()
display_label = Label(window, textvariable=display_text, font=("Arial", 16))
display_label.grid(row=0, columnspan=3, padx=10, pady=10)
button_rock = Button(
    window, text="Rock", command=lambda: button_click("rock"), width=10
)
button_rock.grid(row=1, column=0, padx=5, pady=5)

button_paper = Button(
    window, text="Paper", command=lambda: button_click("paper"), width=10
)
button_paper.grid(row=1, column=1, padx=5, pady=5)

button_scissors = Button(
    window, text="Scissors", command=lambda: button_click("scissors"), width=10
)
button_scissors.grid(row=1, column=2, padx=5, pady=5)
scoreboard_text = StringVar()
scoreboard_label = Label(window, textvariable=scoreboard_text)
